---autogenerated


--
-- ─── SYSTEM ─────────────────────────────────────────────────────────────────────
--
--- CE3 System Interface
---| Essential CE Methods eg Entities,CVars
---@class System
local System = _G['System']


function System.ShowDebugger() end

function System.DumpMemStats () end

function System.DumpMemoryCoverage() end

function System.ApplicationTest() end

function System.QuitInNSeconds() end

function System.DumpWinHeaps () end

function System.CreateDownload() end

function System.LoadFont() end

---* Execute a console command
---@param command string `command to execute`
function System.ExecuteCommand(command) end

function System.LogToConsole() end

function System.LogAlways() end

function System.Warning() end

function System.Error() end

---* Checks if Running in Editor
---@return boolean `true if running in editor else false`
function System.IsEditor() end

---* Checks if Running in Pure Edit Mode
---@return boolean `true if running in editor And in Pure Edit Mode else false`
function System.IsEditing() end

function System.ClearConsole() end

function System.Log() end

function System.SetConsoleImage() end

function System.GetCurrTime() end

function System.GetCurrAsyncTime() end

function System.GetFrameTime() end

function System.GetLocalOSTime() end

function System.GetUserName() end

function System.ShowConsole() end

function System.CheckHeapValid() end

function System.GetConfigSpec() end

function System.IsMultiplayer() end

---* Fetch an Entity using its entityId
---@param entityId EntityId
---@return CE3.Entity|any `Entity or nil`
function System.GetEntity(entityId) end


---* Returns the Class of an Entity by its entityId
---@param entityId userdata
---@return string
function System.GetEntityClass(entityId) end

function System.PrepareEntityFromPool() end

function System.ReturnEntityToPool() end

function System.ResetPoolEntity() end

---* Fetch All Entities
---@return table
function System.GetEntities() end

---* Fetch All Entities of a Specified Class
---@param class string
---@return CE3.Entity[]|nil
function System.GetEntitiesByClass(class) end

---* Fetch All Entities of a Specified Class in the given Sphere
---@param center vector3
---@param radius number
---@return CE3.Entity[]|nil
function System.GetEntitiesInSphere(center,radius) end

---* Fetch All Entities of a Specified Class in the given Sphere
---@param center vector3 center of the sphere
---@param radius number radius of the sphere
---@param EntityClass string Entity Class to filter
---@return CE3.Entity[]|nil
function System.GetEntitiesInSphereByClass(center,radius, EntityClass) end

--- Scans a directory.
---@param pszFolderName     string      path to scan
---@param nScanMode
---| 'SCANDIR_ALL'
---| 'SCANDIR_FILES'
---| 'SCANDIR_SUBDIRS'
---@return table<tableIndex,filePath>
function System.ScanDirectory(pszFolderName, nScanMode) end

function System.DrawLabel() end

function System.GetPhysicalEntitiesInBox(center,radius) end

function System.GetPhysicalEntitiesInBoxByClass(center,radius, className) end

function System.GetNearestEntityByClass(center,radius, className) end

---* Fetch an Entity using its Name
---@param sEntityName string
---@return CE3.Entity|any
function System.GetEntityByName(sEntityName) end

---* Fetch an EntityId using its Name
---@param sEntityName string
---@return EntityId|any
function System.GetEntityIdByName(sEntityName) end

function System.DeformTerrainInternal( nameIsMaterial) end

function System.DeformTerrain() end

function System.DeformTerrainUsingMat() end

function System.ScreenToTexture() end

function System.DrawLine() end

function System.DrawDLine() end

function System.DrawText() end

function System.SetPostProcessFxParam() end

function System.GetPostProcessFxParam() end

function System.SetScreenFx() end

function System.GetScreenFx() end

---* Sets the Value of a Cvar
---@param key string `cvar key to set`
---@param value string|number `value to set`
function System.SetCVar(key, value) end

---* Gets the Value of a Cvar
---@param key string `cvar key to get`
---@return nil|number|string
function System.GetCVar(key) end

---Register a Console Commmand
-- sCommand should be the string name of a function to call passing assigned parameters,eg
-- myCommand(%1,%2)
---@param sCCommandName string `C command name.`
---@param sCommand string `Command string`
---@param sHelp string `Help for the command usage.`
function System.AddCCommand(sCCommandName, sCommand, sHelp) end

--- Unregister a Console Commmand
---@param sCCommandName string `C command name.`
function System.RemoveCCommand(sCCommandName) end

--- Add a Key Binding
---@param sKey string `Key to bind`
---@param sCommand string `Command to bind`
function System.AddKeyBind(sKey, sCommand) end

function System.SetScissor() end

function System.ActivateLight() end

function System.ActivateMainLight() end

function System.SetSkyBox() end

function System.IsValidMapPos() end

function System.EnableMainView() end

function System.DebugStats() end

function System.ViewDistanceSet() end

function System.ViewDistanceGet() end

function System.SetSunColor(vColor) end

function System.GetSunColor() end

function System.SetSkyColor(vColor) end

function System.GetSkyColor() end

function System.SetSkyHighlight( tbl) end

function System.GetSkyHighlight( params) end

function System.ApplyForceToEnvironment() end

function System.GetOutdoorAmbientColor() end

function System.SetOutdoorAmbientColor() end

function System.GetTerrainElevation() end

function System.SetIndoorColor() end

function System.ActivatePortal() end

function System.DumpMMStats() end

function System.EnumDisplayFormats() end

function System.EnumAAFormats() end

function System.IsPointIndoors() end

function System.SetGammaDelta() end

function System.ProjectToScreen(vec) end

function System.EnableHeatVision() end

function System.IndoorSoundAllowed() end

function System.EnableOceanRendering() end

function System.Break() end

function System.SetWaterVolumeOffset() end

function System.SetViewCameraFov(fov) end

function System.GetViewCameraFov() end

function System.IsPointVisible(point) end

function System.GetViewCameraPos() end

function System.GetViewCameraDir() end

function System.GetViewCameraUpDir() end

function System.GetViewCameraAngles() end

function System.RayWorldIntersection() end

function System.RayTraceCheck() end

function System.IsPS0Supported() end

function System.IsHDRSupported() end

function System.SetBudget() end

function System.SetVolumetricFogModifiers() end

function System.SetWind() end

function System.GetWind() end

function System.GetSurfaceTypeIdByName( surfaceName) end

function System.GetSurfaceTypeNameById(surfaceId) end

function System.RemoveEntity( entityId) end

---* Spawn an Entity
--- spawnParams is a table defining at least
---{ class = "applefresh", pos = { x = 123, y=123, z=123 } }
---@param spawnParams table
function System.SpawnEntity(spawnParams) end

function System.IsDevModeEnable() end

function System.SaveConfiguration() end

function System.GetSystemMem() end

--- Quit the Game
function System.Quit() end

function System.ClearKeyState() end

function System.LoadLocalizationXml( filename) end

function System.GetFrameID() end

_G['System'] = System
